{"ast":null,"code":"var _jsxFileName = \"E:\\\\0TUser18\\\\Downloads\\\\Projects\\\\YoutubeClone\\\\client\\\\src\\\\components\\\\Videos.jsx\";\nimport VideoCard from './VideoCard';\nimport ChannelCard from './ChannelCard';\nimport { Stack, Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Videos = _ref => {\n  let {\n    videos\n  } = _ref;\n  if (!(videos !== null && videos !== void 0 && videos.length)) return 'Loading...';\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: direction || \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    gap: 2,\n    children: videos.map((item, idx) => /*#__PURE__*/_jsxDEV(Box, {\n      children: [item.id.videoId && /*#__PURE__*/_jsxDEV(VideoCard, {\n        video: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 31\n      }, this), item.id.channelId && /*#__PURE__*/_jsxDEV(ChannelCard, {\n        channelDetail: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 33\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Videos;\nexport default Videos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["VideoCard","ChannelCard","Stack","Box","Videos","videos","length","direction","map","item","idx","id","videoId","channelId"],"sources":["E:/0TUser18/Downloads/Projects/YoutubeClone/client/src/components/Videos.jsx"],"sourcesContent":["import VideoCard from './VideoCard'\r\nimport ChannelCard from './ChannelCard'\r\nimport { Stack, Box } from \"@mui/material\";\r\n\r\nconst Videos = ({videos}) => {\r\n  if(!videos?.length) return 'Loading...';\r\n\r\n  return (\r\n    <Stack direction={direction || \"row\"} flexWrap=\"wrap\" justifyContent=\"start\" alignItems=\"start\" gap={2}>\r\n      {videos.map((item, idx) => (\r\n        <Box key={idx}>\r\n          {item.id.videoId && <VideoCard video={item} /> }\r\n          {item.id.channelId && <ChannelCard channelDetail={item} />}\r\n        </Box>\r\n      ))}\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default Videos"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,eAA3B;;;AAEA,MAAMC,MAAM,GAAG,QAAc;EAAA,IAAb;IAACC;EAAD,CAAa;EAC3B,IAAG,EAACA,MAAD,aAACA,MAAD,eAACA,MAAM,CAAEC,MAAT,CAAH,EAAoB,OAAO,YAAP;EAEpB,oBACE,QAAC,KAAD;IAAO,SAAS,EAAEC,SAAS,IAAI,KAA/B;IAAsC,QAAQ,EAAC,MAA/C;IAAsD,cAAc,EAAC,OAArE;IAA6E,UAAU,EAAC,OAAxF;IAAgG,GAAG,EAAE,CAArG;IAAA,UACGF,MAAM,CAACG,GAAP,CAAW,CAACC,IAAD,EAAOC,GAAP,kBACV,QAAC,GAAD;MAAA,WACGD,IAAI,CAACE,EAAL,CAAQC,OAAR,iBAAmB,QAAC,SAAD;QAAW,KAAK,EAAEH;MAAlB;QAAA;QAAA;QAAA;MAAA,QADtB,EAEGA,IAAI,CAACE,EAAL,CAAQE,SAAR,iBAAqB,QAAC,WAAD;QAAa,aAAa,EAAEJ;MAA5B;QAAA;QAAA;QAAA;MAAA,QAFxB;IAAA,GAAUC,GAAV;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAbD;;KAAMN,M;AAeN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}