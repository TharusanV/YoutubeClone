{"ast":null,"code":"var _jsxFileName = \"E:\\\\0TUser18\\\\Downloads\\\\Projects\\\\YoutubeClone\\\\client\\\\src\\\\components\\\\VideoCard.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Typography, Card, CardContent, CardMedia } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoCard = _ref => {\n  var _snippet$thumbnails, _snippet$thumbnails$h;\n\n  let {\n    video: {\n      id: {\n        videoId\n      },\n      snippet\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: {\n        xs: '100%',\n        sm: '358px',\n        md: \"320px\"\n      },\n      boxShadow: \"none\",\n      borderRadius: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: videoId ? `/video/${videoId}` : `/video/cV2gBU6hKfY`,\n      children: /*#__PURE__*/_jsxDEV(CardMedia, {\n        image: snippet === null || snippet === void 0 ? void 0 : (_snippet$thumbnails = snippet.thumbnails) === null || _snippet$thumbnails === void 0 ? void 0 : (_snippet$thumbnails$h = _snippet$thumbnails.high) === null || _snippet$thumbnails$h === void 0 ? void 0 : _snippet$thumbnails$h.url,\n        alt: snippet === null || snippet === void 0 ? void 0 : snippet.title,\n        sx: {\n          width: {\n            xs: '100%',\n            sm: '358px'\n          },\n          height: 180\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        height: '106px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/video/${videoId}`,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          fontWeight: \"bold\",\n          children: snippet === null || snippet === void 0 ? void 0 : snippet.title.slice(0, 60)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/channel/${snippet === null || snippet === void 0 ? void 0 : snippet.channelId}`,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          color: \"gray\",\n          children: snippet === null || snippet === void 0 ? void 0 : snippet.channelTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = VideoCard;\nexport default VideoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoCard\");","map":{"version":3,"names":["React","Link","Typography","Card","CardContent","CardMedia","VideoCard","video","id","videoId","snippet","width","xs","sm","md","boxShadow","borderRadius","thumbnails","high","url","title","height","slice","channelId","channelTitle"],"sources":["E:/0TUser18/Downloads/Projects/YoutubeClone/client/src/components/VideoCard.jsx"],"sourcesContent":["import React from 'react'\r\nimport {Link } from 'react-router-dom'\r\nimport { Typography, Card, CardContent, CardMedia } from \"@mui/material\";\r\n\r\nconst VideoCard = ({video : {id: {videoId}, snippet }}) => {\r\n  return (\r\n    <Card sx={{ width: { xs: '100%', sm: '358px', md: \"320px\", }, boxShadow: \"none\", borderRadius: 0 }}>\r\n    <Link to={videoId ? `/video/${videoId}` : `/video/cV2gBU6hKfY` }>\r\n      <CardMedia image={snippet?.thumbnails?.high?.url} alt={snippet?.title} \r\n        sx={{ width: { xs: '100%', sm: '358px'}, height: 180 }} \r\n      />\r\n    </Link>\r\n    <CardContent sx={{ height: '106px' }}>\r\n      <Link to={`/video/${videoId}`} >\r\n        <Typography variant=\"subtitle1\" fontWeight=\"bold\">{snippet?.title.slice(0, 60)}</Typography>\r\n      </Link>\r\n      <Link to={`/channel/${snippet?.channelId}`} >\r\n        <Typography variant=\"subtitle2\" color=\"gray\">{snippet?.channelTitle}</Typography>\r\n      </Link>\r\n    </CardContent>\r\n  </Card>\r\n  )\r\n}\r\n\r\nexport default VideoCard"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAoB,kBAApB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,WAA3B,EAAwCC,SAAxC,QAAyD,eAAzD;;;AAEA,MAAMC,SAAS,GAAG,QAAyC;EAAA;;EAAA,IAAxC;IAACC,KAAK,EAAG;MAACC,EAAE,EAAE;QAACC;MAAD,CAAL;MAAgBC;IAAhB;EAAT,CAAwC;EACzD,oBACE,QAAC,IAAD;IAAM,EAAE,EAAE;MAAEC,KAAK,EAAE;QAAEC,EAAE,EAAE,MAAN;QAAcC,EAAE,EAAE,OAAlB;QAA2BC,EAAE,EAAE;MAA/B,CAAT;MAAoDC,SAAS,EAAE,MAA/D;MAAuEC,YAAY,EAAE;IAArF,CAAV;IAAA,wBACA,QAAC,IAAD;MAAM,EAAE,EAAEP,OAAO,GAAI,UAASA,OAAQ,EAArB,GAA0B,oBAA3C;MAAA,uBACE,QAAC,SAAD;QAAW,KAAK,EAAEC,OAAF,aAAEA,OAAF,8CAAEA,OAAO,CAAEO,UAAX,iFAAE,oBAAqBC,IAAvB,0DAAE,sBAA2BC,GAA7C;QAAkD,GAAG,EAAET,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEU,KAAhE;QACE,EAAE,EAAE;UAAET,KAAK,EAAE;YAAEC,EAAE,EAAE,MAAN;YAAcC,EAAE,EAAE;UAAlB,CAAT;UAAqCQ,MAAM,EAAE;QAA7C;MADN;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADA,eAMA,QAAC,WAAD;MAAa,EAAE,EAAE;QAAEA,MAAM,EAAE;MAAV,CAAjB;MAAA,wBACE,QAAC,IAAD;QAAM,EAAE,EAAG,UAASZ,OAAQ,EAA5B;QAAA,uBACE,QAAC,UAAD;UAAY,OAAO,EAAC,WAApB;UAAgC,UAAU,EAAC,MAA3C;UAAA,UAAmDC,OAAnD,aAAmDA,OAAnD,uBAAmDA,OAAO,CAAEU,KAAT,CAAeE,KAAf,CAAqB,CAArB,EAAwB,EAAxB;QAAnD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,IAAD;QAAM,EAAE,EAAG,YAAWZ,OAAZ,aAAYA,OAAZ,uBAAYA,OAAO,CAAEa,SAAU,EAAzC;QAAA,uBACE,QAAC,UAAD;UAAY,OAAO,EAAC,WAApB;UAAgC,KAAK,EAAC,MAAtC;UAAA,UAA8Cb,OAA9C,aAA8CA,OAA9C,uBAA8CA,OAAO,CAAEc;QAAvD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QANA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAlBD;;KAAMlB,S;AAoBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}